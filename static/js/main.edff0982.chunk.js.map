{"version":3,"sources":["components/Home/SideDrawer/index.js","consts/types.js","actions/index.js","reducers/userReducer.js","reducers/snackbarReducer.js","reducers/index.js","store.js","components/loadingView.js","components/Home/Header/index.js","components/Home/ViewDrawer/details.js","components/Home/ViewDrawer/index.js","components/Home/Tabs/List/ListItem.js","components/emptyState.js","components/Home/Tabs/List/index.js","components/Home/Tabs/index.js","components/Home/CreateListDialog.js","components/CreateTodo/ListPicker.js","components/CreateTodo/index.js","components/snackbar.js","components/Home/index.js","App.js","serviceWorker.js","index.js"],"names":["iOS","process","browser","test","navigator","userAgent","SideList","props","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","classes","list","_material_ui_core_ListItem__WEBPACK_IMPORTED_MODULE_12___default","_material_ui_core_ListItemText__WEBPACK_IMPORTED_MODULE_14___default","primary","secondary","_material_ui_core_Divider__WEBPACK_IMPORTED_MODULE_11___default","_material_ui_core_List__WEBPACK_IMPORTED_MODULE_10___default","lists","length","map","text","index","button","key","onClick","changeTab","manageLists","_material_ui_core_ListItemIcon__WEBPACK_IMPORTED_MODULE_13___default","_material_ui_icons_RemoveCircle__WEBPACK_IMPORTED_MODULE_18___default","deleteList","dialogToggler","_material_ui_icons_Add__WEBPACK_IMPORTED_MODULE_17___default","react__WEBPACK_IMPORTED_MODULE_5__","manageListsToggler","_material_ui_icons_Edit__WEBPACK_IMPORTED_MODULE_16___default","_material_ui_icons_Cancel__WEBPACK_IMPORTED_MODULE_19___default","_material_ui_icons_Settings__WEBPACK_IMPORTED_MODULE_15___default","Drawer","state","_this","setState","prevState","this","_this$props","isDrawerOpen","drawerToggler","_material_ui_core_SwipeableDrawer__WEBPACK_IMPORTED_MODULE_9___default","open","onClose","onOpen","disableBackdropTransition","disableDiscovery","tabIndex","role","onKeyDown","React","Component","connect","withStyles","width","fullList","color","__webpack_require__","d","__webpack_exports__","FETCH_USER","CREATE_TODO","DELETE_TODO","TOGGLE_TODO","CREATE_LIST","DELETE_LIST","OPEN_SNACKBAR","CLOSE_SNACKBAR","createTodo","taskName","notes","dueDate","_ref","Object","C_Users_user_Desktop_WorkSpace_todo_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_Users_user_Desktop_WorkSpace_todo_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","dispatch","wrap","_context","prev","next","type","openSnackbar","stop","_x","apply","arguments","createList","name","_ref2","_callee2","_context2","_x2","_ref3","_callee3","_context3","_x3","fetchUser","toggleTodo","id","_ref4","_callee4","_context4","_x4","deleteTodo","_ref5","_callee5","_context5","_x5","message","closeSnackbar","INITIAL_STATE","todos","settings","initialState","toast","rootReducer","combineReducers","user","undefined","action","objectSpread","concat","toConsumableArray","listsCopy","filteredTodos","filter","todo","indexdelete","findIndex","slice","console","log","completed","completedAt","todosCopy","indexTodelete","indexTodo","toggledTodo","Date","now","snackbar","persistConfig","storage","stateReconciler","autoMergeLevel2","pReducer","persistReducer","store","createStore","applyMiddleware","reduxThunk","persistor","persistStore","theme","progress","margin","spacing","unit","position","left","top","height","zIndex","react_default","CircularProgress_default","Header","anchorEl","handleChange","event","auth","target","checked","handleMenu","currentTarget","handleClose","selectedList","Boolean","root","AppBar_default","Toolbar_default","IconButton_default","menuButton","aria-label","Menu_default","Typography_default","variant","grow","toUpperCase","aria-owns","aria-haspopup","MoreVert_default","core_Menu_default","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem_default","flexGrow","marginLeft","marginRight","backgroundColor","palette","background","paper","chip","section1","section2","section3","time","marginBottom","paddingRight","handleToggle","Grid_default","container","alignItems","item","xs","gutterBottom","react","AccessTime_default","dist_default","fromNow","durationFromNow","date","Divider_default","Chip_default","label","Button_default","fullWidth","TemporaryDrawer","window","vibrate","viewToggler","Drawer_default","anchor","drawer","details","borderRadius","Todo","handleDelete","getTime","Moment","calendar","_this2","viewOpen","ListItem_default","dense","Checkbox_default","disableRipple","ListItemText_default","ListItemSecondaryAction_default","Delete_default","card","minWidth","bullet","display","transform","title","fontSize","pos","style","Card_default","CardContent_default","component","info","CardActions_default","size","method","methodName","TodoLists","createToggler","emptyState","List_default","List_ListItem","overflow","webkitOverflowScrolling","TabContainer","dir","Tabs_List","FullWidthTabs","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","value","handleChangeIndex","bind","assertThisInitialized","selectedTabIndex","snackbarOpen","fabClassName","classNames","fab","fabMoveUp","fabMoveDown","Tabs_default","onChange","listName","Tab_default","Badge_default","padding","badgeContent","lib_default","axis","direction","onChangeIndex","Fab_default","Create_default","bottom","right","transition","transitions","create","duration","enteringScreen","easing","easeOut","leavingScreen","sharp","withTheme","CreateList","handleSubmit","preventDefault","isDialogOpen","Dialog_default","aria-labelledby","DialogTitle_default","DialogContent_default","DialogContentText_default","TextField_default","autoFocus","DialogActions_default","e","ConfirmationDialogRaw","handleEntering","radioGroupRef","focus","handleCancel","handleOk","nextProps","other","objectWithoutProperties","assign","disableBackdropClick","disableEscapeKeyDown","maxWidth","onEntering","RadioGroup_default","ref","FormControlLabel_default","control","Radio_default","ConfirmationDialog","_this3","handleClickListItem","setList","_this$props2","_this$props3","divider","aria-controls","ListItemIcon_default","icons_List_default","ListPicker_ConfirmationDialogRaw","maxHeight","Transition","Slide_default","CreateTodo","defineProperty","_this$state","desc","prevProps","fullScreen","TransitionComponent","appBar","KeyboardBackspace_default","flex","placeholder","Alarm_default","InputLabelProps","shrink","Notes_default","Input_default","input","inputProps","ListPicker","textField","SimpleSnackbar","reason","Snackbar_default","autoHideDuration","onRequestClose","ContentProps","aria-describedby","close","Close_default","Home","viewDrawerToggler","isViewDrawerOpen","selectedTodo","createTodoToggler","isCreateTodoOpen","Home_Header","SideDrawer","Home_Tabs","CreateListDialog","components_CreateTodo","ViewDrawer","App","toLowerCase","isIos","standalone","addEventListener","components_Home","isLocalhost","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","createMuiTheme","main","ReactDOM","render","es","integration_react","loading","loadingView","styles","src_App","document","getElementById","URL","href","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.edff0982.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { deleteList } from \"../../../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Settings from \"@material-ui/icons/Settings\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport Add from \"@material-ui/icons/Add\";\r\nimport RemoveCircle from \"@material-ui/icons/RemoveCircle\";\r\nimport Cancel from \"@material-ui/icons/Cancel\";\r\n\r\nconst styles = {\r\n  list: {\r\n    width: 250\r\n  },\r\n  fullList: {\r\n    width: \"auto\"\r\n  },\r\n  primary: {\r\n    color: \"white\"\r\n  }\r\n};\r\nconst iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\r\nconst SideList = props => {\r\n  return (\r\n    <div className={props.classes.list}>\r\n      <ListItem>\r\n        <ListItemText primary=\"Todos\" secondary=\"Your lists\" />\r\n      </ListItem>\r\n      <Divider />\r\n      <List>\r\n        {props.lists.length > 0 ? (\r\n          props.lists.map((text, index) => (\r\n            <ListItem\r\n              button\r\n              key={text}\r\n              onClick={() => {\r\n                props.changeTab(index);\r\n              }}\r\n            >\r\n              <ListItemText primary={text} />\r\n              {props.manageLists ? (\r\n                <ListItemIcon>\r\n                  <RemoveCircle\r\n                    onClick={() => {\r\n                      props.deleteList(text);\r\n                    }}\r\n                  />\r\n                </ListItemIcon>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </ListItem>\r\n          ))\r\n        ) : (\r\n          <ListItem onClick={props.dialogToggler}>\r\n            <ListItemIcon>\r\n              <Add />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Create a New List\" />\r\n          </ListItem>\r\n        )}\r\n      </List>\r\n      <Divider />\r\n\r\n      <List>\r\n        {props.lists.length > 0 ? (\r\n          <Fragment>\r\n            <ListItem onClick={props.manageListsToggler}>\r\n              <ListItemIcon>\r\n                {props.manageLists === false ? <Edit /> : <Cancel />}\r\n              </ListItemIcon>\r\n              <ListItemText\r\n                primary={\r\n                  props.manageLists === false ? \"Manage Lists\" : \"Cancel\"\r\n                }\r\n              />\r\n            </ListItem>\r\n            <ListItem onClick={props.dialogToggler}>\r\n              <ListItemIcon>\r\n                <Add />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Create a New List\" />\r\n            </ListItem>\r\n          </Fragment>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n\r\n        <ListItem>\r\n          <ListItemIcon>\r\n            <Settings />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Settings\" />\r\n        </ListItem>\r\n      </List>\r\n    </div>\r\n  );\r\n};\r\nclass Drawer extends React.Component {\r\n  state = {\r\n    manageLists: false\r\n  };\r\n  manageListsToggler = () => {\r\n    this.setState(prevState => {\r\n      return { manageLists: !prevState.manageLists };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { manageLists } = this.state;\r\n    const {\r\n      classes,\r\n      isDrawerOpen,\r\n      drawerToggler,\r\n      lists,\r\n      dialogToggler,\r\n      changeTab,\r\n      deleteList\r\n    } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <SwipeableDrawer\r\n          open={isDrawerOpen}\r\n          onClose={drawerToggler}\r\n          onOpen={drawerToggler}\r\n          disableBackdropTransition={!iOS}\r\n          disableDiscovery={iOS}\r\n        >\r\n          <div tabIndex={0} role=\"button\" onKeyDown={drawerToggler}>\r\n            <SideList\r\n              classes={classes}\r\n              lists={lists}\r\n              dialogToggler={dialogToggler}\r\n              changeTab={changeTab}\r\n              deleteList={deleteList}\r\n              manageLists={manageLists}\r\n              manageListsToggler={this.manageListsToggler}\r\n            />\r\n          </div>\r\n        </SwipeableDrawer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDrawer.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { deleteList }\r\n)(withStyles(styles)(Drawer));\r\n","export const FETCH_USER = \"FETCH_USER\";\r\nexport const CREATE_TODO = \"CREATE_TODO\";\r\nexport const DELETE_TODO = \"DELETE_TODO\";\r\nexport const UPDATE_TODO = \"UPDATE_TODO\";\r\nexport const TOGGLE_TODO = \"TOGGLE_TODO\";\r\nexport const CREATE_LIST = \"CREATE_LIST\";\r\nexport const DELETE_LIST = \"DELETE_LIST\";\r\nexport const OPEN_SNACKBAR = \"OPEN_SNACKBAR\";\r\nexport const CLOSE_SNACKBAR = \"CLOSE_SNACKBAR\";\r\n","import {\r\n  CREATE_TODO,\r\n  FETCH_USER,\r\n  CREATE_LIST,\r\n  DELETE_LIST,\r\n  TOGGLE_TODO,\r\n  DELETE_TODO,\r\n  OPEN_SNACKBAR,\r\n  CLOSE_SNACKBAR\r\n} from \"../consts/types\";\r\n\r\nexport const createTodo = (taskName, notes, dueDate, list) => {\r\n  return async function(dispatch) {\r\n    dispatch({\r\n      type: CREATE_TODO,\r\n      taskName,\r\n      notes,\r\n      dueDate,\r\n      list\r\n    });\r\n    dispatch(openSnackbar(\"Todo successfully added\"));\r\n  };\r\n};\r\n\r\nexport const createList = name => {\r\n  return async function(dispatch) {\r\n    dispatch({\r\n      type: CREATE_LIST,\r\n      name\r\n    });\r\n    dispatch(openSnackbar(\"List successfully created\"));\r\n  };\r\n};\r\n\r\nexport const deleteList = name => {\r\n  return async function(dispatch) {\r\n    dispatch({\r\n      type: DELETE_LIST,\r\n      name\r\n    });\r\n    dispatch(openSnackbar(\"List successfully deleted\"));\r\n  };\r\n};\r\n\r\nexport const fetchUser = () => ({\r\n  type: FETCH_USER\r\n});\r\n\r\nexport const toggleTodo = id => {\r\n  return async function(dispatch) {\r\n    dispatch({\r\n      type: TOGGLE_TODO,\r\n      id\r\n    });\r\n  };\r\n};\r\nexport const deleteTodo = id => {\r\n  return async function(dispatch) {\r\n    dispatch({\r\n      type: DELETE_TODO,\r\n      id\r\n    });\r\n    dispatch(openSnackbar(\"Todo successfully deleted\"));\r\n  };\r\n};\r\n\r\nexport const openSnackbar = message => ({\r\n  type: OPEN_SNACKBAR,\r\n  message\r\n});\r\n\r\nexport const closeSnackbar = () => ({\r\n  type: CLOSE_SNACKBAR\r\n});\r\n","import {\r\n  CREATE_LIST,\r\n  DELETE_LIST,\r\n  CREATE_TODO,\r\n  FETCH_USER,\r\n  DELETE_TODO,\r\n  UPDATE_TODO,\r\n  TOGGLE_TODO\r\n} from \"../consts/types\";\r\n\r\nconst INITIAL_STATE = { lists: [], todos: [], settings: {} };\r\n\r\nexport default function(state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n    case FETCH_USER:\r\n      return { ...state };\r\n    case CREATE_LIST:\r\n      return { ...state, lists: [...state.lists, action.name] };\r\n    case DELETE_LIST:\r\n      const listsCopy = [...state.lists];\r\n      const allTodos = [...state.todos];\r\n\r\n      const filteredTodos = allTodos.filter(todo => todo.list !== action.name);\r\n      const indexdelete = listsCopy.findIndex(function(list) {\r\n        return list === action.name;\r\n      });\r\n      return {\r\n        ...state,\r\n        lists: [\r\n          ...listsCopy.slice(0, indexdelete),\r\n          ...listsCopy.slice(indexdelete + 1)\r\n        ],\r\n        todos: [...filteredTodos]\r\n      };\r\n\r\n    case CREATE_TODO:\r\n      let index = state.todos.length;\r\n      console.log(action);\r\n      return {\r\n        ...state,\r\n        todos: [\r\n          ...state.todos,\r\n          {\r\n            id: index,\r\n            taskName: action.taskName,\r\n            dueDate: action.dueDate,\r\n            list: action.list,\r\n            notes: action.notes,\r\n            completed: false,\r\n            completedAt: \"\"\r\n          }\r\n        ]\r\n      };\r\n    case DELETE_TODO:\r\n      const todosCopy = [...state.todos];\r\n      const indexTodelete = todosCopy.findIndex(function(todo) {\r\n        return todo.id === action.id;\r\n      });\r\n      return {\r\n        ...state,\r\n        todos: [\r\n          ...todosCopy.slice(0, indexTodelete),\r\n          ...todosCopy.slice(indexTodelete + 1)\r\n        ]\r\n      };\r\n\r\n    case TOGGLE_TODO:\r\n      const todos = [...state.todos];\r\n      const indexTodo = todos.findIndex(function(todo) {\r\n        return todo.id === action.id;\r\n      });\r\n      const toggledTodo = {\r\n        ...todos[indexTodo],\r\n        completed: !todos[indexTodo].completed,\r\n        completedAt: Date.now()\r\n      };\r\n      return {\r\n        ...state,\r\n        todos: [\r\n          ...todos.slice(0, indexTodo),\r\n          toggledTodo,\r\n          ...todos.slice(indexTodo + 1)\r\n        ]\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { OPEN_SNACKBAR, CLOSE_SNACKBAR } from \"../consts/types\";\r\nconst initialState = {\r\n  toast: {\r\n    message: \"\",\r\n    open: false\r\n  }\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case OPEN_SNACKBAR: {\r\n      return {\r\n        ...state,\r\n        toast: {\r\n          message: action.message,\r\n          open: true\r\n        }\r\n      };\r\n    }\r\n\r\n    case CLOSE_SNACKBAR: {\r\n      return {\r\n        ...state,\r\n        toast: {\r\n          message: \"\",\r\n          open: false\r\n        }\r\n      };\r\n    }\r\n  }\r\n\r\n  return state;\r\n}\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport user from \"./userReducer\";\r\nimport snackbar from \"./snackbarReducer\";\r\nconst rootReducer = combineReducers({\r\n  user,\r\n  snackbar\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport reduxThunk from \"redux-thunk\";\r\nimport autoMergeLevel2 from \"redux-persist/lib/stateReconciler/autoMergeLevel2\";\r\nimport rootReducer from \"./reducers\"; // the value from combineReducers\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage: storage,\r\n\r\n  stateReconciler: autoMergeLevel2 // see \"Merge Process\" section for details.\r\n};\r\n\r\nconst pReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const store = createStore(pReducer, applyMiddleware(reduxThunk));\r\nexport const persistor = persistStore(store);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst styles = theme => ({\r\n  progress: {\r\n    margin: theme.spacing.unit * 2,\r\n    position: \"fixed\",\r\n    left: \"0px\",\r\n    top: \"0px\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    zIndex: \"9999\"\r\n  }\r\n});\r\n\r\nfunction CircularIndeterminate(props) {\r\n  const { classes } = props;\r\n  return (\r\n    <div>\r\n      <CircularProgress className={classes.progress} />\r\n    </div>\r\n  );\r\n}\r\n\r\nCircularIndeterminate.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(CircularIndeterminate);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\r\n\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  grow: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20\r\n  }\r\n};\r\n\r\nclass Header extends React.Component {\r\n  state = {\r\n    anchorEl: null\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ auth: event.target.checked });\r\n  };\r\n\r\n  handleMenu = event => {\r\n    this.setState({ anchorEl: event.currentTarget });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ anchorEl: null });\r\n  };\r\n\r\n  render() {\r\n    const { classes, drawerToggler, selectedList } = this.props;\r\n    const { anchorEl } = this.state;\r\n    const open = Boolean(anchorEl);\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <IconButton\r\n              className={classes.menuButton}\r\n              color=\"inherit\"\r\n              aria-label=\"Menu\"\r\n              onClick={drawerToggler}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n              {selectedList.toUpperCase()}\r\n            </Typography>\r\n\r\n            <div>\r\n              <IconButton\r\n                aria-owns={open ? \"menu-appbar\" : undefined}\r\n                aria-haspopup=\"true\"\r\n                onClick={this.handleMenu}\r\n                color=\"inherit\"\r\n              >\r\n                <MoreIcon />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"right\"\r\n                }}\r\n                transformOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"right\"\r\n                }}\r\n                open={open}\r\n                onClose={this.handleClose}\r\n              >\r\n                <MenuItem onClick={this.handleClose}>Profile</MenuItem>\r\n                <MenuItem onClick={this.handleClose}>My account</MenuItem>\r\n              </Menu>\r\n            </div>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Header);\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Moment from \"react-moment\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AccessTime from \"@material-ui/icons/AccessTime\";\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  chip: {\r\n    marginRight: theme.spacing.unit\r\n  },\r\n  section1: {\r\n    margin: `${theme.spacing.unit * 3}px ${theme.spacing.unit * 2}px`\r\n  },\r\n  section2: {\r\n    margin: theme.spacing.unit * 2\r\n  },\r\n  section3: {\r\n    margin: `${theme.spacing.unit * 6}px ${theme.spacing.unit * 2}px ${theme\r\n      .spacing.unit * 2}px`\r\n  },\r\n  time: {\r\n    marginBottom: \"-6px\",\r\n    paddingRight: \"4px\"\r\n  }\r\n});\r\n\r\nfunction MiddleDividers(props) {\r\n  const {\r\n    classes,\r\n    taskName,\r\n    list,\r\n    notes,\r\n    completed,\r\n    dueDate,\r\n    completedAt,\r\n    id,\r\n    handleToggle\r\n  } = props;\r\n  const completedFilter = d => {\r\n    return `completed ${d} `;\r\n  };\r\n  const dueFilter = d => {\r\n    return `due in ${d}`;\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.section1}>\r\n        <Grid container alignItems=\"center\">\r\n          <Grid item xs>\r\n            <Typography gutterBottom variant=\"h5\">\r\n              {taskName}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            {completedAt || dueDate ? (\r\n              <Typography gutterBottom variant=\"caption\">\r\n                {completed ? (\r\n                  <Fragment>\r\n                    <AccessTime className={classes.time} />\r\n                    <Moment fromNow filter={completedFilter}>\r\n                      {completedAt}\r\n                    </Moment>\r\n                  </Fragment>\r\n                ) : dueDate.length > 0 ? (\r\n                  <Fragment>\r\n                    <AccessTime className={classes.time} />\r\n                    <Moment durationFromNow date={dueDate} filter={dueFilter} />\r\n                  </Fragment>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </Typography>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n        <Typography color=\"textSecondary\">{notes}</Typography>\r\n      </div>\r\n      <Divider variant=\"middle\" />\r\n      <div className={classes.section2}>\r\n        <Typography gutterBottom variant=\"body1\">\r\n          List\r\n        </Typography>\r\n        <div>\r\n          <Chip className={classes.chip} label={list} />\r\n        </div>\r\n      </div>\r\n      <div className={classes.section3}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          fullWidth\r\n          onClick={() => {\r\n            handleToggle(id);\r\n          }}\r\n        >\r\n          {completed === true ? \"Completed\" : \"Complete now\"}\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nMiddleDividers.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(MiddleDividers);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport { toggleTodo, deleteTodo } from \"../../../actions\";\r\n\r\nimport Details from \"./details\";\r\nconst styles = {\r\n  drawer: {\r\n    borderRadius: \"10px\"\r\n  },\r\n  list: {\r\n    width: 250\r\n  },\r\n  fullList: {\r\n    width: \"auto\"\r\n  }\r\n};\r\n\r\nclass TemporaryDrawer extends React.Component {\r\n  handleToggle = id => {\r\n    this.props.toggleTodo(id);\r\n    window.navigator.vibrate(200);\r\n  };\r\n  render() {\r\n    const { classes, open, viewToggler, todo, toggleTodo } = this.props;\r\n\r\n    return (\r\n      <Drawer\r\n        anchor=\"bottom\"\r\n        open={open}\r\n        onClose={viewToggler}\r\n        className={classes.drawer}\r\n      >\r\n        <div tabIndex={0} role=\"button\" onClick={viewToggler}>\r\n          <Details\r\n            taskName={todo.taskName}\r\n            completed={todo.completed}\r\n            completedAt={todo.completedAt}\r\n            notes={todo.notes}\r\n            list={todo.list}\r\n            dueDate={todo.dueDate}\r\n            id={todo.id}\r\n            handleToggle={this.handleToggle}\r\n          />\r\n        </div>\r\n      </Drawer>\r\n    );\r\n  }\r\n}\r\n\r\nTemporaryDrawer.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { toggleTodo }\r\n)(withStyles(styles)(TemporaryDrawer));\r\n","import React, { Fragment } from \"react\";\r\nimport Moment from \"react-moment\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport { toggleTodo, deleteTodo } from \"../../../../actions\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Delete from \"@material-ui/icons/Delete\";\r\nimport ViewTodo from \"../../ViewDrawer\";\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n});\r\n\r\nclass Todo extends React.Component {\r\n  handleToggle = id => {\r\n    this.props.toggleTodo(id);\r\n    window.navigator.vibrate(200);\r\n  };\r\n  handleDelete = id => {\r\n    this.props.deleteTodo(id);\r\n  };\r\n  getTime = completedAt => {\r\n    return Moment(completedAt).calendar();\r\n  };\r\n\r\n  render() {\r\n    const { todo, viewToggler, viewOpen } = this.props;\r\n\r\n    return (\r\n      <Fragment>\r\n        <ListItem role={undefined} dense button>\r\n          <Checkbox\r\n            checked={todo.completed}\r\n            tabIndex={-1}\r\n            disableRipple\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              this.handleToggle(todo.id);\r\n            }}\r\n          />\r\n          <ListItemText\r\n            onClick={() => {\r\n              viewToggler(todo);\r\n            }}\r\n            primary={\r\n              todo.completed ? <strike>{todo.taskName}</strike> : todo.taskName\r\n            }\r\n            secondary={\r\n              todo.completed ? (\r\n                <Moment\r\n                  filter={d => {\r\n                    return \"completed \" + d;\r\n                  }}\r\n                  date={todo.completedAt}\r\n                  fromNow\r\n                />\r\n              ) : (\r\n                \"\"\r\n              )\r\n            }\r\n          />\r\n          <ListItemSecondaryAction>\r\n            <IconButton\r\n              aria-label=\"Delete\"\r\n              onClick={() => {\r\n                this.handleDelete(todo.id);\r\n              }}\r\n            >\r\n              <Delete />\r\n            </IconButton>\r\n          </ListItemSecondaryAction>\r\n        </ListItem>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nTodo.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { toggleTodo, deleteTodo }\r\n)(withStyles(styles)(Todo));\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst styles = {\r\n  card: {\r\n    minWidth: 275\r\n  },\r\n  bullet: {\r\n    display: \"inline-block\",\r\n    margin: \"0 2px\",\r\n    transform: \"scale(0.8)\"\r\n  },\r\n  title: {\r\n    fontSize: 14\r\n  },\r\n  pos: {\r\n    marginBottom: 12\r\n  }\r\n};\r\n\r\nfunction SimpleCard(props) {\r\n  const { classes } = props;\r\n\r\n  return (\r\n    <div style={{ margin: 10 }}>\r\n      <Card className={classes.card}>\r\n        <CardContent>\r\n          <Typography variant=\"h5\" component=\"h2\">\r\n            {props.title}\r\n          </Typography>\r\n\r\n          <Typography component=\"p\">{props.info}</Typography>\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            onClick={() => {\r\n              props.method();\r\n            }}\r\n          >\r\n            {props.methodName}\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nSimpleCard.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(SimpleCard);\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"./ListItem\";\r\nimport EmptyState from \"../../../emptyState\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    overflow: \"auto\",\r\n    webkitOverflowScrolling: \"touch\"\r\n  }\r\n});\r\n\r\nclass TodoLists extends React.Component {\r\n  render() {\r\n    const { classes, todos, createToggler, viewToggler, viewOpen } = this.props;\r\n\r\n    if (todos.length < 1) {\r\n      return (\r\n        <EmptyState\r\n          title=\"Create a todo\"\r\n          info=\"You currently have no todos\"\r\n          methodName=\"Create Todo\"\r\n          method={() => {\r\n            createToggler();\r\n          }}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <List className={classes.root}>\r\n        {todos.map((todo, index) => (\r\n          <Fragment key={index}>\r\n            <ListItem\r\n              todo={todo}\r\n              viewToggler={viewToggler}\r\n              viewOpen={viewOpen}\r\n            />\r\n\r\n            <Divider />\r\n          </Fragment>\r\n        ))}\r\n      </List>\r\n    );\r\n  }\r\n}\r\n\r\nTodoLists.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(TodoLists);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport Create from \"@material-ui/icons/Create\";\r\nimport List from \"./List\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport EmptyState from \"../../emptyState\";\r\n\r\nfunction TabContainer({ dir, todos, createToggler, viewToggler, viewOpen }) {\r\n  return (\r\n    <List\r\n      dir={dir}\r\n      todos={todos}\r\n      createToggler={createToggler}\r\n      viewToggler={viewToggler}\r\n      viewOpen={viewOpen}\r\n    />\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  dir: PropTypes.string.isRequired\r\n};\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  padding: {\r\n    padding: `0 ${theme.spacing.unit * 2}px`\r\n  },\r\n  fab: {\r\n    position: \"absolute\",\r\n    bottom: theme.spacing.unit * 2,\r\n    right: theme.spacing.unit * 2\r\n  },\r\n  fabMoveUp: {\r\n    transform: \"translate3d(0, -46px, 0)\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.enteringScreen,\r\n      easing: theme.transitions.easing.easeOut\r\n    })\r\n  },\r\n  fabMoveDown: {\r\n    transform: \"translate3d(0, 0, 0)\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.leavingScreen,\r\n      easing: theme.transitions.easing.sharp\r\n    })\r\n  }\r\n});\r\n\r\nclass FullWidthTabs extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange = (event, value) => {\r\n    this.props.changeTab(value);\r\n  };\r\n  handleChangeIndex = index => {\r\n    this.props.changeTab(index);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      theme,\r\n      createToggler,\r\n      todos,\r\n      lists,\r\n      dialogToggler,\r\n      selectedTabIndex,\r\n      snackbarOpen,\r\n      viewToggler,\r\n      viewOpen\r\n    } = this.props;\r\n    const fabClassName = classNames(\r\n      classes.fab,\r\n      snackbarOpen ? classes.fabMoveUp : classes.fabMoveDown\r\n    );\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\">\r\n          <Tabs value={selectedTabIndex} onChange={this.handleChange}>\r\n            {lists.map((listName, index) => (\r\n              <Tab\r\n                label={\r\n                  <Badge\r\n                    className={classes.padding}\r\n                    color=\"secondary\"\r\n                    badgeContent={\r\n                      todos.filter(\r\n                        todo =>\r\n                          todo.list === listName && todo.completed !== true\r\n                      ).length\r\n                    }\r\n                  >\r\n                    {listName}\r\n                  </Badge>\r\n                }\r\n                key={index}\r\n                value={index}\r\n              />\r\n            ))}\r\n          </Tabs>\r\n        </AppBar>\r\n        <div>\r\n          <SwipeableViews\r\n            axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\r\n            index={selectedTabIndex}\r\n            onChangeIndex={this.handleChangeIndex}\r\n          >\r\n            {lists.length > 0 ? (\r\n              lists.map((listName, index) => (\r\n                <TabContainer\r\n                  dir={theme.direction}\r\n                  todos={todos.filter(function(todo) {\r\n                    return todo.list === listName;\r\n                  })}\r\n                  key={index}\r\n                  createToggler={createToggler}\r\n                  viewToggler={viewToggler}\r\n                  viewOpen={viewOpen}\r\n                />\r\n              ))\r\n            ) : (\r\n              <EmptyState\r\n                title=\"Create a list to get started\"\r\n                info=\"You currently have no lists create a list to get started\"\r\n                methodName=\"Create list\"\r\n                method={dialogToggler}\r\n              />\r\n            )}\r\n          </SwipeableViews>\r\n        </div>\r\n        <Fab\r\n          className={fabClassName}\r\n          color=\"primary\"\r\n          onClick={() => {\r\n            if (lists.length) {\r\n              createToggler();\r\n            } else {\r\n              dialogToggler();\r\n            }\r\n          }}\r\n        >\r\n          <Create />\r\n        </Fab>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFullWidthTabs.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(FullWidthTabs);\r\n","import React, { Fragment, Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createList } from \"../../actions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nclass CreateList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { value: \"\" };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({ value: event.target.value });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    this.props.createList(this.state.value);\r\n    this.setState({ value: \"\" });\r\n  }\r\n  render() {\r\n    const { dialogToggler, isDialogOpen } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <Dialog\r\n          open={isDialogOpen}\r\n          onClose={dialogToggler}\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\">\r\n            Create a new Todolist\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              After the todolist has been created you can add as many todos as\r\n              you want\r\n            </DialogContentText>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              label=\"List name\"\r\n              type=\"text\"\r\n              fullWidth\r\n              value={this.state.value}\r\n              onChange={this.handleChange}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={dialogToggler} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              onClick={e => {\r\n                this.handleSubmit(e);\r\n                dialogToggler();\r\n              }}\r\n              color=\"primary\"\r\n            >\r\n              Create\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  { createList }\r\n)(CreateList);\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListIcon from \"@material-ui/icons/List\";\r\n\r\nclass ConfirmationDialogRaw extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      value: props.selectedList || props.value\r\n    };\r\n  }\r\n\r\n  // TODO\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.value !== this.props.value) {\r\n      this.setState({ value: nextProps.value });\r\n    }\r\n  }\r\n\r\n  handleEntering = () => {\r\n    this.radioGroupRef.focus();\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.props.onClose(this.props.value);\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.props.onClose(this.state.value);\r\n  };\r\n\r\n  handleChange = (event, value) => {\r\n    this.setState({ value });\r\n  };\r\n\r\n  render() {\r\n    const { value, lists, ...other } = this.props;\r\n\r\n    return (\r\n      <Dialog\r\n        disableBackdropClick\r\n        disableEscapeKeyDown\r\n        maxWidth=\"xs\"\r\n        onEntering={this.handleEntering}\r\n        aria-labelledby=\"confirmation-dialog-title\"\r\n        {...other}\r\n      >\r\n        <DialogTitle id=\"confirmation-dialog-title\">Your Todolists</DialogTitle>\r\n        <DialogContent>\r\n          <RadioGroup\r\n            ref={ref => {\r\n              this.radioGroupRef = ref;\r\n            }}\r\n            aria-label=\"Ringtone\"\r\n            name=\"ringtone\"\r\n            value={this.state.value}\r\n            onChange={this.handleChange}\r\n          >\r\n            {lists.map(list => (\r\n              <FormControlLabel\r\n                value={list}\r\n                key={list}\r\n                control={<Radio color=\"primary\" />}\r\n                label={list}\r\n              />\r\n            ))}\r\n          </RadioGroup>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={this.handleCancel} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={this.handleOk} color=\"primary\">\r\n            Ok\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nConfirmationDialogRaw.propTypes = {\r\n  onClose: PropTypes.func,\r\n  value: PropTypes.string\r\n};\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  paper: {\r\n    width: \"80%\",\r\n    maxHeight: 435\r\n  }\r\n});\r\n\r\nclass ConfirmationDialog extends React.Component {\r\n  state = {\r\n    open: false,\r\n    value: this.props.selectedList || \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { setList, selectedList } = this.props;\r\n    setList(selectedList);\r\n  }\r\n  handleClickListItem = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleClose = value => {\r\n    this.props.setList(value);\r\n    this.setState({ value, open: false });\r\n  };\r\n\r\n  render() {\r\n    let { classes, lists, selectedList } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <ListItem\r\n          button\r\n          divider\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"ringtone-menu\"\r\n          aria-label=\"Phone ringtone\"\r\n          onClick={this.handleClickListItem}\r\n        >\r\n          <ListItemIcon>\r\n            <ListIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"List\" secondary={this.state.value} />\r\n        </ListItem>\r\n\r\n        <ConfirmationDialogRaw\r\n          classes={{\r\n            paper: classes.paper\r\n          }}\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n          value={this.state.value}\r\n          lists={lists}\r\n          selectedList={selectedList}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nConfirmationDialog.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(ConfirmationDialog);\r\n","import React from \"react\";\r\nimport ListPicker from \"./ListPicker\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { connect } from \"react-redux\";\r\nimport { createTodo } from \"../../actions\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport KeyboardBackspace from \"@material-ui/icons/KeyboardBackspace\";\r\nimport Alarm from \"@material-ui/icons/Alarm\";\r\nimport Notes from \"@material-ui/icons/Notes\";\r\nimport Create from \"@material-ui/icons/Create\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nconst styles = theme => ({\r\n  appBar: {\r\n    position: \"relative\"\r\n  },\r\n  flex: {\r\n    flex: 1\r\n  },\r\n  textField: {\r\n    marginLeft: \"1.5%\",\r\n    marginRight: \"1.5%\"\r\n  }\r\n});\r\n\r\nfunction Transition(props) {\r\n  return <Slide direction=\"up\" {...props} />;\r\n}\r\n\r\nclass CreateTodo extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      open: false,\r\n      taskName: \"\",\r\n      date: \"\",\r\n      desc: \"\",\r\n      list: \"\"\r\n    };\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.selectedList !== prevProps.selectedList) {\r\n      this.setState({ selectedList: this.props.selectedList });\r\n    }\r\n  }\r\n\r\n  handleChange = event => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    console.log(this.state);\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n  setList = listName => {\r\n    this.setState({\r\n      list: listName\r\n    });\r\n  };\r\n  handleSubmit = () => {\r\n    const { taskName, date, desc, list } = this.state;\r\n    this.props.createTodo(taskName, desc, date, list);\r\n    this.setState({\r\n      taskName: \"\",\r\n      date: \"\",\r\n      desc: \"\",\r\n      list: \"\"\r\n    });\r\n  };\r\n  render() {\r\n    const {\r\n      classes,\r\n      dialogToggler,\r\n      lists,\r\n      isDialogOpen,\r\n      selectedList\r\n    } = this.props;\r\n    return (\r\n      <Dialog\r\n        fullScreen\r\n        open={isDialogOpen}\r\n        onClose={dialogToggler}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"Close\"\r\n              onClick={() => {\r\n                dialogToggler();\r\n              }}\r\n            >\r\n              <KeyboardBackspace />\r\n            </IconButton>\r\n            <Typography\r\n              variant=\"h6\"\r\n              color=\"inherit\"\r\n              className={classes.flex}\r\n              onClick={() => {\r\n                dialogToggler();\r\n              }}\r\n            >\r\n              Back\r\n            </Typography>\r\n            <Button\r\n              color=\"inherit\"\r\n              onClick={() => {\r\n                this.handleSubmit();\r\n                dialogToggler();\r\n              }}\r\n            >\r\n              save\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        <List>\r\n          <ListItem>\r\n            <ListItemIcon>\r\n              <Create />\r\n            </ListItemIcon>\r\n            <ListItemText\r\n              primary=\"Task Name\"\r\n              secondary={\r\n                <TextField\r\n                  id=\"standard-with-placeholder\"\r\n                  placeholder=\"Task Name\"\r\n                  value={this.state.taskName}\r\n                  name=\"taskName\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              }\r\n            />\r\n          </ListItem>\r\n          <Divider />\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <Alarm />\r\n            </ListItemIcon>\r\n            <ListItemText\r\n              primary=\"Due Date\"\r\n              secondary={\r\n                <TextField\r\n                  id=\"datetime-local\"\r\n                  type=\"date\"\r\n                  InputLabelProps={{\r\n                    shrink: true\r\n                  }}\r\n                  name=\"date\"\r\n                  value={this.state.date}\r\n                  onChange={this.handleChange}\r\n                />\r\n              }\r\n            />\r\n          </ListItem>\r\n          <Divider />\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <Notes />\r\n            </ListItemIcon>\r\n            <ListItemText\r\n              primary=\"Notes\"\r\n              secondary={\r\n                <Input\r\n                  placeholder=\"write a description\"\r\n                  className={classes.input}\r\n                  inputProps={{\r\n                    \"aria-label\": \"Description\"\r\n                  }}\r\n                  name=\"desc\"\r\n                  value={this.state.desc}\r\n                  onChange={this.handleChange}\r\n                />\r\n              }\r\n            />\r\n            <Divider />\r\n          </ListItem>\r\n          <ListPicker\r\n            lists={lists}\r\n            setList={this.setList}\r\n            selectedList={selectedList}\r\n          />\r\n        </List>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nCreateTodo.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\nfunction mapStateToProps(state) {\r\n  return { lists: state.user.lists };\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createTodo }\r\n)(withStyles(styles)(CreateTodo));\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nconst styles = theme => ({\r\n  close: {\r\n    padding: theme.spacing.unit / 2\r\n  },\r\n  snackbar: {\r\n    position: \"absolute\"\r\n  }\r\n});\r\n\r\nclass SimpleSnackbar extends React.Component {\r\n  handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    this.props.closeSnackbar();\r\n  };\r\n\r\n  render() {\r\n    const { classes, open, message } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"left\"\r\n          }}\r\n          className={classes.snackbar}\r\n          open={open}\r\n          autoHideDuration={4000}\r\n          onClose={this.handleClose}\r\n          onRequestClose={this.handleClose}\r\n          ContentProps={{\r\n            \"aria-describedby\": \"message-id\"\r\n          }}\r\n          message={<span id=\"message-id\">{message}</span>}\r\n          action={[\r\n            <IconButton\r\n              key=\"close\"\r\n              aria-label=\"Close\"\r\n              color=\"inherit\"\r\n              className={classes.close}\r\n              onClick={this.handleClose}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          ]}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nSimpleSnackbar.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(SimpleSnackbar);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Header from \"./Header\";\r\nimport Tabs from \"./Tabs\";\r\nimport CreateList from \"./CreateListDialog\";\r\nimport CreateTodo from \"../CreateTodo\";\r\nimport SideDrawer from \"./SideDrawer\";\r\nimport ViewTodo from \"./ViewDrawer\";\r\nimport Snackbar from \"../snackbar\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { openSnackbar, closeSnackbar } from \"../../actions\";\r\n\r\nconst styles = theme => ({\r\n  progress: {\r\n    margin: theme.spacing.unit * 2\r\n  }\r\n});\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isDrawerOpen: false,\r\n      isDialogOpen: false,\r\n      isCreateTodoOpen: false,\r\n      isViewDrawerOpen: false,\r\n      selectedTodo: {},\r\n      selectedList: \"Todos\",\r\n      selectedTabIndex: 0\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.user.lists.length > 0) {\r\n      this.setState({ selectedList: this.props.user.lists[0] });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    // Typical usage (don't forget to compare props):\r\n    if (\r\n      this.props.user.lists !== prevProps.user.lists &&\r\n      prevProps.user.lists.length === 0\r\n    ) {\r\n      this.setState({ selectedList: this.props.user.lists[0] });\r\n    }\r\n    if (\r\n      this.props.user.lists !== prevProps.user.lists &&\r\n      this.props.user.lists.length === 0\r\n    ) {\r\n      this.setState({ selectedList: \"Todos\" });\r\n    }\r\n  }\r\n  changeTab = value => {\r\n    let lists = this.props.user.lists;\r\n    this.setState({ selectedList: lists[value] });\r\n    this.setState({ selectedTabIndex: value });\r\n  };\r\n  drawerToggler = () => {\r\n    this.setState(prevState => {\r\n      return { isDrawerOpen: !prevState.isDrawerOpen };\r\n    });\r\n  };\r\n  viewDrawerToggler = (todo = {}) => {\r\n    this.setState(prevState => {\r\n      return {\r\n        isViewDrawerOpen: !prevState.isViewDrawerOpen,\r\n        selectedTodo: todo\r\n      };\r\n    });\r\n  };\r\n  dialogToggler = () => {\r\n    this.setState(prevState => {\r\n      return { isDialogOpen: !prevState.isDialogOpen };\r\n    });\r\n  };\r\n  createTodoToggler = () => {\r\n    this.setState(prevState => {\r\n      return { isCreateTodoOpen: !prevState.isCreateTodoOpen };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      isDrawerOpen,\r\n      isDialogOpen,\r\n      selectedList,\r\n      selectedTabIndex,\r\n      isCreateTodoOpen,\r\n      isViewDrawerOpen,\r\n      selectedTodo\r\n    } = this.state;\r\n    let { user, classes, closeSnackbar, toast } = this.props;\r\n    let { lists, todos } = user;\r\n\r\n    if (!user) {\r\n      return (\r\n        <Fragment>\r\n          <Header drawerToggler={this.drawerToggler} />\r\n          <CircularProgress className={classes.progress} />\r\n        </Fragment>\r\n      );\r\n    }\r\n    return (\r\n      <Fragment>\r\n        <Header\r\n          selectedList={selectedList}\r\n          drawerToggler={this.drawerToggler}\r\n        />\r\n        <SideDrawer\r\n          isDrawerOpen={isDrawerOpen}\r\n          drawerToggler={this.drawerToggler}\r\n          lists={lists}\r\n          dialogToggler={this.dialogToggler}\r\n          changeTab={this.changeTab}\r\n        />\r\n\r\n        <Tabs\r\n          dialogToggler={this.dialogToggler}\r\n          createToggler={this.createTodoToggler}\r\n          viewToggler={this.viewDrawerToggler}\r\n          lists={lists}\r\n          todos={todos}\r\n          selectedTabIndex={selectedTabIndex}\r\n          changeTab={this.changeTab}\r\n          snackbarOpen={toast.open}\r\n          selectedList={selectedList}\r\n          viewOpen={isViewDrawerOpen}\r\n        />\r\n        <CreateList\r\n          dialogToggler={this.dialogToggler}\r\n          isDialogOpen={isDialogOpen}\r\n        />\r\n        <CreateTodo\r\n          dialogToggler={this.createTodoToggler}\r\n          isDialogOpen={isCreateTodoOpen}\r\n          selectedList={selectedList}\r\n        />\r\n        <ViewTodo\r\n          todo={selectedTodo}\r\n          open={isViewDrawerOpen}\r\n          viewToggler={this.viewDrawerToggler}\r\n        />\r\n        <Snackbar\r\n          closeSnackbar={closeSnackbar}\r\n          message={toast.message}\r\n          open={toast.open}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ snackbar }) {\r\n  return { toast: snackbar.toast };\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  { openSnackbar, closeSnackbar }\r\n)(withStyles(styles)(Home));\r\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchUser, openSnackbar } from \"./actions\";\nimport Home from \"./components/Home\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.fetchUser();\n\n    const isIos = () => {\n      const userAgent = window.navigator.userAgent.toLowerCase();\n      return /iphone|ipad|ipod/.test(userAgent);\n    };\n    // Detects if device is in standalone mode\n    const isInStandaloneMode = () =>\n      \"standalone\" in window.navigator && window.navigator.standalone;\n    if (isIos() && !isInStandaloneMode()) {\n      this.props.openSnackbar(\n        \"Install this app on your device.Tap the share icon and then Add to homescreen \"\n      );\n    }\n\n    window.addEventListener(\"offline\", function(e) {\n      this.props.openSnackbar(\"Not connected to the internet\");\n    });\n  }\n\n  render() {\n    return <Home user={this.props.user} />;\n  }\n}\n\nfunction mapStateToProps({ user }) {\n  return { user };\n}\n\nexport default connect(\n  mapStateToProps,\n  { fetchUser, openSnackbar }\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/lib/integration/react\";\nimport { persistor, store } from \"./store\";\nimport LoadingView from \"./components/loadingView\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#212121\"\n    },\n    secondary: {\n      main: \"#ffffff\"\n    }\n  }\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={<LoadingView />} persistor={persistor}>\n      <MuiThemeProvider theme={theme}>\n        <App />\n      </MuiThemeProvider>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}