{"version":3,"sources":["components/Home/SideDrawer/index.js","consts/types.js","actions/index.js","Notifications.js","reducers/userReducer.js","reducers/snackbarReducer.js","reducers/index.js","store.js","components/loadingView.js","components/Home/Header/index.js","components/Home/ViewDrawer/details.js","components/Home/ViewDrawer/index.js","components/Home/Tabs/List/ListItem.js","components/emptyState.js","components/Home/Tabs/List/index.js","components/Home/Tabs/index.js","components/Home/CreateListDialog.js","components/CreateTodo/ListPicker.js","components/CreateTodo/index.js","components/snackbar.js","components/Home/index.js","App.js","serviceWorker.js","index.js"],"names":["iOS","process","browser","test","navigator","userAgent","SideList","props","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","classes","list","_material_ui_core_ListItem__WEBPACK_IMPORTED_MODULE_12___default","_material_ui_core_ListItemText__WEBPACK_IMPORTED_MODULE_14___default","primary","secondary","_material_ui_core_Divider__WEBPACK_IMPORTED_MODULE_11___default","_material_ui_core_List__WEBPACK_IMPORTED_MODULE_10___default","lists","length","map","text","index","button","key","onClick","changeTab","manageLists","_material_ui_core_ListItemIcon__WEBPACK_IMPORTED_MODULE_13___default","_material_ui_icons_RemoveCircle__WEBPACK_IMPORTED_MODULE_18___default","deleteList","dialogToggler","_material_ui_icons_Add__WEBPACK_IMPORTED_MODULE_17___default","react__WEBPACK_IMPORTED_MODULE_5__","manageListsToggler","_material_ui_icons_Edit__WEBPACK_IMPORTED_MODULE_16___default","_material_ui_icons_Cancel__WEBPACK_IMPORTED_MODULE_19___default","_material_ui_icons_Settings__WEBPACK_IMPORTED_MODULE_15___default","Drawer","state","_this","setState","prevState","this","_this$props","isDrawerOpen","drawerToggler","_material_ui_core_SwipeableDrawer__WEBPACK_IMPORTED_MODULE_9___default","open","onClose","onOpen","disableBackdropTransition","disableDiscovery","tabIndex","role","onKeyDown","React","Component","connect","withStyles","width","fullList","color","__webpack_require__","d","__webpack_exports__","FETCH_USER","CREATE_TODO","DELETE_TODO","TOGGLE_TODO","CREATE_LIST","DELETE_LIST","OPEN_SNACKBAR","CLOSE_SNACKBAR","MONITOR_TODOS","createTodo","taskName","notes","dueDate","_ref","Object","C_Users_user_Desktop_WorkSpace_todo_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_Users_user_Desktop_WorkSpace_todo_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","dispatch","wrap","_context","prev","next","type","openSnackbar","stop","_x","apply","arguments","createList","name","_ref2","_callee2","_context2","_x2","_ref3","_callee3","_context3","_x3","fetchUser","toggleTodo","id","_ref4","_callee4","_context4","_x4","deleteTodo","_ref5","_callee5","_context5","_x5","message","closeSnackbar","createNotification","title","Notification","permission","body","icon","badge","timestamp","Date","now","window","vibrate","requestPermission","INITIAL_STATE","todos","settings","setInterval","store","initialState","toast","rootReducer","combineReducers","user","undefined","action","objectSpread","assign","todo","m1","m2","Moment","date","month","notified","completed","concat","toConsumableArray","listsCopy","filteredTodos","filter","indexdelete","findIndex","slice","completedAt","todosCopy","indexTodelete","indexTodo","toggledTodo","snackbar","persistConfig","storage","stateReconciler","autoMergeLevel2","pReducer","persistReducer","createStore","applyMiddleware","reduxThunk","persistor","persistStore","theme","progress","margin","spacing","unit","position","left","top","height","zIndex","react_default","CircularProgress_default","Header","anchorEl","handleChange","event","auth","target","checked","handleMenu","currentTarget","handleClose","selectedList","Boolean","root","AppBar_default","Toolbar_default","IconButton_default","menuButton","aria-label","Menu_default","Typography_default","variant","grow","toUpperCase","aria-owns","aria-haspopup","MoreVert_default","core_Menu_default","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem_default","flexGrow","marginLeft","marginRight","backgroundColor","palette","background","paper","chip","section1","section2","section3","time","marginBottom","paddingRight","handleToggle","Grid_default","container","alignItems","item","xs","gutterBottom","react","AccessTime_default","dist_default","fromNow","durationFromNow","Divider_default","Chip_default","label","Button_default","fullWidth","TemporaryDrawer","viewToggler","Drawer_default","anchor","drawer","details","borderRadius","Todo","handleDelete","getTime","calendar","_this2","viewOpen","ListItem_default","dense","Checkbox_default","disableRipple","ListItemText_default","ListItemSecondaryAction_default","Delete_default","card","minWidth","bullet","display","transform","fontSize","pos","style","Card_default","CardContent_default","component","info","CardActions_default","size","method","methodName","TodoLists","createToggler","emptyState","List_default","List_ListItem","overflow","webkitOverflowScrolling","TabContainer","dir","Tabs_List","FullWidthTabs","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","value","handleChangeIndex","bind","assertThisInitialized","selectedTabIndex","snackbarOpen","fabClassName","classNames","fab","fabMoveUp","fabMoveDown","Tabs_default","onChange","listName","Tab_default","Badge_default","padding","badgeContent","lib_default","axis","direction","onChangeIndex","Fab_default","Create_default","bottom","right","transition","transitions","create","duration","enteringScreen","easing","easeOut","leavingScreen","sharp","withTheme","CreateList","handleSubmit","preventDefault","isDialogOpen","Dialog_default","aria-labelledby","DialogTitle_default","DialogContent_default","DialogContentText_default","TextField_default","autoFocus","DialogActions_default","e","ConfirmationDialogRaw","handleEntering","radioGroupRef","focus","handleCancel","handleOk","nextProps","other","objectWithoutProperties","disableBackdropClick","disableEscapeKeyDown","maxWidth","onEntering","RadioGroup_default","ref","FormControlLabel_default","control","Radio_default","ConfirmationDialog","_this3","handleClickListItem","setList","_this$props2","_this$props3","divider","aria-controls","ListItemIcon_default","icons_List_default","ListPicker_ConfirmationDialogRaw","maxHeight","Transition","Slide_default","CreateTodo","defineProperty","_this$state","desc","prevProps","fullScreen","TransitionComponent","appBar","KeyboardBackspace_default","flex","placeholder","Alarm_default","InputLabelProps","shrink","Notes_default","Input_default","input","inputProps","ListPicker","textField","SimpleSnackbar","reason","Snackbar_default","autoHideDuration","onRequestClose","ContentProps","aria-describedby","close","Close_default","Home","viewDrawerToggler","isViewDrawerOpen","selectedTodo","createTodoToggler","isCreateTodoOpen","Home_Header","SideDrawer","Home_Tabs","CreateListDialog","components_CreateTodo","ViewDrawer","App","toLowerCase","isIos","standalone","addEventListener","status","components_Home","isLocalhost","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","createMuiTheme","main","ReactDOM","render","es","integration_react","loading","loadingView","styles","src_App","document","getElementById","URL","href","origin","filesToCache","waitUntil","caches","cache","addAll","fetch","response","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b5e92ec9.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { deleteList } from \"../../../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Settings from \"@material-ui/icons/Settings\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport Add from \"@material-ui/icons/Add\";\r\nimport RemoveCircle from \"@material-ui/icons/RemoveCircle\";\r\nimport Cancel from \"@material-ui/icons/Cancel\";\r\n\r\nconst styles = {\r\n  list: {\r\n    width: 250\r\n  },\r\n  fullList: {\r\n    width: \"auto\"\r\n  },\r\n  primary: {\r\n    color: \"white\"\r\n  }\r\n};\r\nconst iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\r\nconst SideList = props => {\r\n  return (\r\n    <div className={props.classes.list}>\r\n      <ListItem>\r\n        <ListItemText primary=\"Todos\" secondary=\"Your lists\" />\r\n      </ListItem>\r\n      <Divider />\r\n      <List>\r\n        {props.lists.length > 0 ? (\r\n          props.lists.map((text, index) => (\r\n            <ListItem\r\n              button\r\n              key={text}\r\n              onClick={() => {\r\n                props.changeTab(index);\r\n              }}\r\n            >\r\n              <ListItemText primary={text} />\r\n              {props.manageLists ? (\r\n                <ListItemIcon>\r\n                  <RemoveCircle\r\n                    onClick={() => {\r\n                      props.deleteList(text);\r\n                    }}\r\n                  />\r\n                </ListItemIcon>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </ListItem>\r\n          ))\r\n        ) : (\r\n          <ListItem onClick={props.dialogToggler}>\r\n            <ListItemIcon>\r\n              <Add />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Create a New List\" />\r\n          </ListItem>\r\n        )}\r\n      </List>\r\n      <Divider />\r\n\r\n      <List>\r\n        {props.lists.length > 0 ? (\r\n          <Fragment>\r\n            <ListItem onClick={props.manageListsToggler}>\r\n              <ListItemIcon>\r\n                {props.manageLists === false ? <Edit /> : <Cancel />}\r\n              </ListItemIcon>\r\n              <ListItemText\r\n                primary={\r\n                  props.manageLists === false ? \"Manage Lists\" : \"Cancel\"\r\n                }\r\n              />\r\n            </ListItem>\r\n            <ListItem onClick={props.dialogToggler}>\r\n              <ListItemIcon>\r\n                <Add />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Create a New List\" />\r\n            </ListItem>\r\n          </Fragment>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n\r\n        <ListItem>\r\n          <ListItemIcon>\r\n            <Settings />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Settings\" />\r\n        </ListItem>\r\n      </List>\r\n    </div>\r\n  );\r\n};\r\nclass Drawer extends React.Component {\r\n  state = {\r\n    manageLists: false\r\n  };\r\n  manageListsToggler = () => {\r\n    this.setState(prevState => {\r\n      return { manageLists: !prevState.manageLists };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { manageLists } = this.state;\r\n    const {\r\n      classes,\r\n      isDrawerOpen,\r\n      drawerToggler,\r\n      lists,\r\n      dialogToggler,\r\n      changeTab,\r\n      deleteList\r\n    } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <SwipeableDrawer\r\n          open={isDrawerOpen}\r\n          onClose={drawerToggler}\r\n          onOpen={drawerToggler}\r\n          disableBackdropTransition={!iOS}\r\n          disableDiscovery={iOS}\r\n        >\r\n          <div tabIndex={0} role=\"button\" onKeyDown={drawerToggler}>\r\n            <SideList\r\n              classes={classes}\r\n              lists={lists}\r\n              dialogToggler={dialogToggler}\r\n              changeTab={changeTab}\r\n              deleteList={deleteList}\r\n              manageLists={manageLists}\r\n              manageListsToggler={this.manageListsToggler}\r\n            />\r\n          </div>\r\n        </SwipeableDrawer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDrawer.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { deleteList }\r\n)(withStyles(styles)(Drawer));\r\n","export const FETCH_USER = \"FETCH_USER\";\r\nexport const CREATE_TODO = \"CREATE_TODO\";\r\nexport const DELETE_TODO = \"DELETE_TODO\";\r\nexport const UPDATE_TODO = \"UPDATE_TODO\";\r\nexport const TOGGLE_TODO = \"TOGGLE_TODO\";\r\nexport const CREATE_LIST = \"CREATE_LIST\";\r\nexport const DELETE_LIST = \"DELETE_LIST\";\r\nexport const OPEN_SNACKBAR = \"OPEN_SNACKBAR\";\r\nexport const CLOSE_SNACKBAR = \"CLOSE_SNACKBAR\";\r\nexport const MONITOR_TODOS = \"MONITOR_TODOS\";\r\n","import {\r\n  CREATE_TODO,\r\n  FETCH_USER,\r\n  CREATE_LIST,\r\n  DELETE_LIST,\r\n  TOGGLE_TODO,\r\n  DELETE_TODO,\r\n  OPEN_SNACKBAR,\r\n  CLOSE_SNACKBAR,\r\n  MONITOR_TODOS\r\n} from \"../consts/types\";\r\n\r\nexport const createTodo = (taskName, notes, dueDate, list) => {\r\n  return async function(dispatch) {\r\n    dispatch({\r\n      type: CREATE_TODO,\r\n      taskName,\r\n      notes,\r\n      dueDate,\r\n      list\r\n    });\r\n    dispatch(openSnackbar(\"Todo successfully added\"));\r\n  };\r\n};\r\n\r\nexport const createList = name => {\r\n  return async function(dispatch) {\r\n    dispatch({\r\n      type: CREATE_LIST,\r\n      name\r\n    });\r\n    dispatch(openSnackbar(\"List successfully created\"));\r\n  };\r\n};\r\n\r\nexport const deleteList = name => {\r\n  return async function(dispatch) {\r\n    dispatch({\r\n      type: DELETE_LIST,\r\n      name\r\n    });\r\n    dispatch(openSnackbar(\"List successfully deleted\"));\r\n  };\r\n};\r\n\r\nexport const fetchUser = () => ({\r\n  type: FETCH_USER\r\n});\r\n\r\nexport const toggleTodo = id => {\r\n  return async function(dispatch) {\r\n    dispatch({\r\n      type: TOGGLE_TODO,\r\n      id\r\n    });\r\n  };\r\n};\r\nexport const deleteTodo = id => {\r\n  return async function(dispatch) {\r\n    dispatch({\r\n      type: DELETE_TODO,\r\n      id\r\n    });\r\n    dispatch(openSnackbar(\"Todo successfully deleted\"));\r\n  };\r\n};\r\n\r\nexport const openSnackbar = message => ({\r\n  type: OPEN_SNACKBAR,\r\n  message\r\n});\r\n\r\nexport const closeSnackbar = () => ({\r\n  type: CLOSE_SNACKBAR\r\n});\r\n","function askForPermission() {\r\n  window.addEventListener(\"load\", function() {\r\n    // At first, let's check if we have permission for notification\r\n    // If not, let's ask for it\r\n    if (window.Notification && Notification.permission !== \"granted\") {\r\n      Notification.requestPermission(function(status) {\r\n        if (Notification.permission !== status) {\r\n          Notification.permission = status;\r\n          createNotification(\r\n            \"Todolist\",\r\n            \"You can now receive notifications on your device\"\r\n          );\r\n        }\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\n// function for creating the notification\r\nfunction createNotification(title, message) {\r\n  // Let's check if the browser supports notifications\r\n\r\n  // Let's check if the user is okay to get some notification\r\n  if (Notification.permission === \"granted\") {\r\n    // If it's okay let's create a notification\r\n\r\n    var img = \"/assets/icons/apple-touch-icon.png\";\r\n    var text = message;\r\n    var notification = new Notification(title, {\r\n      body: text,\r\n      icon: img,\r\n      badge: \"assets/icons/android-chrome-512x512.png\",\r\n      timestamp: Date.now()\r\n      // actions: [\r\n      //   {\r\n      //     action: \"coffee-action\",\r\n      //     title: \"Coffee\",\r\n      //     icon: \"/images/demos/action-1-128x128.png\"\r\n      //   },\r\n      //   {\r\n      //     action: \"doughnut-action\",\r\n      //     title: \"Doughnut\",\r\n      //     icon: \"/images/demos/action-2-128x128.png\"\r\n      //   }\r\n      // ]\r\n    });\r\n\r\n    window.navigator.vibrate(500);\r\n  }\r\n\r\n  // Otherwise, we need to ask the user for permission\r\n  // Note, Chrome does not implement the permission static property\r\n  // So we have to check for NOT 'denied' instead of 'default'\r\n  else if (Notification.permission !== \"denied\") {\r\n    Notification.requestPermission(function(permission) {\r\n      // Whatever the user answers, we make sure Chrome stores the information\r\n      if (!(\"permission\" in Notification)) {\r\n        Notification.permission = permission;\r\n      }\r\n\r\n      // If the user is okay, let's create a notification\r\n      if (permission === \"granted\") {\r\n        var img = \"/to-do-notifications/img/icon-128.png\";\r\n        var text = message;\r\n        var notification = new Notification(\"Todolist\", {\r\n          body: text,\r\n          icon: img\r\n        });\r\n\r\n        window.navigator.vibrate(500);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport { askForPermission, createNotification };\r\n","import {\r\n  CREATE_LIST,\r\n  DELETE_LIST,\r\n  CREATE_TODO,\r\n  FETCH_USER,\r\n  DELETE_TODO,\r\n  UPDATE_TODO,\r\n  TOGGLE_TODO,\r\n  MONITOR_TODOS\r\n} from \"../consts/types\";\r\nimport { createNotification } from \"../Notifications\";\r\nimport Moment from \"moment\";\r\nimport { store } from \"../store\";\r\n\r\nfunction isSameDayAndMonth(m1, m2) {\r\n  return m1.date() === m2.date() && m1.month() === m2.month();\r\n}\r\nconst INITIAL_STATE = { lists: [], todos: [], settings: {} };\r\n\r\nexport default function(state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n    case FETCH_USER:\r\n      return { ...state };\r\n    // case MONITOR_TODOS:\r\n    //   state.todos.map(todo => {\r\n    //     if (\r\n    //       isSameDayAndMonth(Moment(Date.now()), Moment(todo.dueDate)) &&\r\n    //       todo.notified === false &&\r\n    //       todo.completed === false\r\n    //     ) {\r\n    //       let notificationTitle = `${todo.taskName} is due today`;\r\n    //       let notificationBody = todo.notes;\r\n    //       todo.notified = true;\r\n    //       createNotification(notificationTitle, notificationBody);\r\n    //     }\r\n    //   });\r\n    //   return state;\r\n    case MONITOR_TODOS:\r\n      return Object.assign({}, state, {\r\n        todos: state.todos.map(todo => {\r\n          if (\r\n            isSameDayAndMonth(Moment(Date.now()), Moment(todo.dueDate)) &&\r\n            todo.notified === false &&\r\n            todo.completed === false\r\n          ) {\r\n            let notificationTitle = `${todo.list}`;\r\n            let notificationBody = `${todo.taskName} is due today`;\r\n            createNotification(notificationTitle, notificationBody);\r\n            return Object.assign({}, todo, {\r\n              notified: true\r\n            });\r\n          }\r\n          return todo;\r\n        })\r\n      });\r\n    case CREATE_LIST:\r\n      return { ...state, lists: [...state.lists, action.name] };\r\n    case DELETE_LIST:\r\n      const listsCopy = [...state.lists];\r\n      const allTodos = [...state.todos];\r\n\r\n      const filteredTodos = allTodos.filter(todo => todo.list !== action.name);\r\n      const indexdelete = listsCopy.findIndex(function(list) {\r\n        return list === action.name;\r\n      });\r\n      return {\r\n        ...state,\r\n        lists: [\r\n          ...listsCopy.slice(0, indexdelete),\r\n          ...listsCopy.slice(indexdelete + 1)\r\n        ],\r\n        todos: [...filteredTodos]\r\n      };\r\n\r\n    case CREATE_TODO:\r\n      let index = state.todos.length;\r\n      return {\r\n        ...state,\r\n        todos: [\r\n          ...state.todos,\r\n          {\r\n            id: index,\r\n            taskName: action.taskName,\r\n            dueDate: action.dueDate,\r\n            list: action.list,\r\n            notes: action.notes,\r\n            completed: false,\r\n            completedAt: \"\",\r\n            notified: false\r\n          }\r\n        ]\r\n      };\r\n    case DELETE_TODO:\r\n      const todosCopy = [...state.todos];\r\n      const indexTodelete = todosCopy.findIndex(function(todo) {\r\n        return todo.id === action.id;\r\n      });\r\n      return {\r\n        ...state,\r\n        todos: [\r\n          ...todosCopy.slice(0, indexTodelete),\r\n          ...todosCopy.slice(indexTodelete + 1)\r\n        ]\r\n      };\r\n\r\n    case TOGGLE_TODO:\r\n      const todos = [...state.todos];\r\n      const indexTodo = todos.findIndex(function(todo) {\r\n        return todo.id === action.id;\r\n      });\r\n      const toggledTodo = {\r\n        ...todos[indexTodo],\r\n        completed: !todos[indexTodo].completed,\r\n        completedAt: Date.now()\r\n      };\r\n      return {\r\n        ...state,\r\n        todos: [\r\n          ...todos.slice(0, indexTodo),\r\n          toggledTodo,\r\n          ...todos.slice(indexTodo + 1)\r\n        ]\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nsetInterval(function() {\r\n  store.dispatch({\r\n    type: MONITOR_TODOS\r\n  });\r\n}, 5000);\r\n","import { OPEN_SNACKBAR, CLOSE_SNACKBAR } from \"../consts/types\";\r\nconst initialState = {\r\n  toast: {\r\n    message: \"\",\r\n    open: false\r\n  }\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case OPEN_SNACKBAR: {\r\n      return {\r\n        ...state,\r\n        toast: {\r\n          message: action.message,\r\n          open: true\r\n        }\r\n      };\r\n    }\r\n\r\n    case CLOSE_SNACKBAR: {\r\n      return {\r\n        ...state,\r\n        toast: {\r\n          message: \"\",\r\n          open: false\r\n        }\r\n      };\r\n    }\r\n  }\r\n\r\n  return state;\r\n}\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport user from \"./userReducer\";\r\nimport snackbar from \"./snackbarReducer\";\r\nconst rootReducer = combineReducers({\r\n  user,\r\n  snackbar\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport reduxThunk from \"redux-thunk\";\r\nimport autoMergeLevel2 from \"redux-persist/lib/stateReconciler/autoMergeLevel2\";\r\nimport rootReducer from \"./reducers\"; // the value from combineReducers\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage: storage,\r\n\r\n  stateReconciler: autoMergeLevel2 // see \"Merge Process\" section for details.\r\n};\r\n\r\nconst pReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const store = createStore(pReducer, applyMiddleware(reduxThunk));\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst styles = theme => ({\r\n  progress: {\r\n    margin: theme.spacing.unit * 2,\r\n    position: \"fixed\",\r\n    left: \"0px\",\r\n    top: \"0px\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    zIndex: \"9999\"\r\n  }\r\n});\r\n\r\nfunction CircularIndeterminate(props) {\r\n  const { classes } = props;\r\n  return (\r\n    <div>\r\n      <CircularProgress className={classes.progress} />\r\n    </div>\r\n  );\r\n}\r\n\r\nCircularIndeterminate.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(CircularIndeterminate);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\r\n\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  grow: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20\r\n  }\r\n};\r\n\r\nclass Header extends React.Component {\r\n  state = {\r\n    anchorEl: null\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ auth: event.target.checked });\r\n  };\r\n\r\n  handleMenu = event => {\r\n    this.setState({ anchorEl: event.currentTarget });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ anchorEl: null });\r\n  };\r\n\r\n  render() {\r\n    const { classes, drawerToggler, selectedList } = this.props;\r\n    const { anchorEl } = this.state;\r\n    const open = Boolean(anchorEl);\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <IconButton\r\n              className={classes.menuButton}\r\n              color=\"inherit\"\r\n              aria-label=\"Menu\"\r\n              onClick={drawerToggler}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n              {selectedList.toUpperCase()}\r\n            </Typography>\r\n\r\n            <div>\r\n              <IconButton\r\n                aria-owns={open ? \"menu-appbar\" : undefined}\r\n                aria-haspopup=\"true\"\r\n                onClick={this.handleMenu}\r\n                color=\"inherit\"\r\n              >\r\n                <MoreIcon />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"right\"\r\n                }}\r\n                transformOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"right\"\r\n                }}\r\n                open={open}\r\n                onClose={this.handleClose}\r\n              >\r\n                <MenuItem onClick={this.handleClose}>Profile</MenuItem>\r\n                <MenuItem onClick={this.handleClose}>My account</MenuItem>\r\n              </Menu>\r\n            </div>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Header);\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Moment from \"react-moment\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AccessTime from \"@material-ui/icons/AccessTime\";\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  chip: {\r\n    marginRight: theme.spacing.unit\r\n  },\r\n  section1: {\r\n    margin: `${theme.spacing.unit * 3}px ${theme.spacing.unit * 2}px`\r\n  },\r\n  section2: {\r\n    margin: theme.spacing.unit * 2\r\n  },\r\n  section3: {\r\n    margin: `${theme.spacing.unit * 6}px ${theme.spacing.unit * 2}px ${theme\r\n      .spacing.unit * 2}px`\r\n  },\r\n  time: {\r\n    marginBottom: \"-6px\",\r\n    paddingRight: \"4px\"\r\n  }\r\n});\r\n\r\nfunction MiddleDividers(props) {\r\n  const {\r\n    classes,\r\n    taskName,\r\n    list,\r\n    notes,\r\n    completed,\r\n    dueDate,\r\n    completedAt,\r\n    id,\r\n    handleToggle\r\n  } = props;\r\n  const completedFilter = d => {\r\n    return `completed ${d} `;\r\n  };\r\n  const dueFilter = d => {\r\n    return `due in ${d}`;\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.section1}>\r\n        <Grid container alignItems=\"center\">\r\n          <Grid item xs>\r\n            <Typography gutterBottom variant=\"h5\">\r\n              {taskName}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            {completedAt || dueDate ? (\r\n              <Typography gutterBottom variant=\"caption\">\r\n                {completed ? (\r\n                  <Fragment>\r\n                    <AccessTime className={classes.time} />\r\n                    <Moment fromNow filter={completedFilter}>\r\n                      {completedAt}\r\n                    </Moment>\r\n                  </Fragment>\r\n                ) : dueDate.length > 0 ? (\r\n                  <Fragment>\r\n                    <AccessTime className={classes.time} />\r\n                    <Moment durationFromNow date={dueDate} filter={dueFilter} />\r\n                  </Fragment>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </Typography>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n        <Typography color=\"textSecondary\">{notes}</Typography>\r\n      </div>\r\n      <Divider variant=\"middle\" />\r\n      <div className={classes.section2}>\r\n        <Typography gutterBottom variant=\"body1\">\r\n          List\r\n        </Typography>\r\n        <div>\r\n          <Chip className={classes.chip} label={list} />\r\n        </div>\r\n      </div>\r\n      <div className={classes.section3}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          fullWidth\r\n          onClick={() => {\r\n            handleToggle(id);\r\n          }}\r\n        >\r\n          {completed === true ? \"Completed\" : \"Complete now\"}\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nMiddleDividers.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(MiddleDividers);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport { toggleTodo, deleteTodo } from \"../../../actions\";\r\n\r\nimport Details from \"./details\";\r\nconst styles = {\r\n  drawer: {\r\n    borderRadius: \"10px\"\r\n  },\r\n  list: {\r\n    width: 250\r\n  },\r\n  fullList: {\r\n    width: \"auto\"\r\n  }\r\n};\r\n\r\nclass TemporaryDrawer extends React.Component {\r\n  handleToggle = id => {\r\n    this.props.toggleTodo(id);\r\n    window.navigator.vibrate(200);\r\n  };\r\n  render() {\r\n    const { classes, open, viewToggler, todo, toggleTodo } = this.props;\r\n\r\n    return (\r\n      <Drawer\r\n        anchor=\"bottom\"\r\n        open={open}\r\n        onClose={viewToggler}\r\n        className={classes.drawer}\r\n      >\r\n        <div tabIndex={0} role=\"button\" onClick={viewToggler}>\r\n          <Details\r\n            taskName={todo.taskName}\r\n            completed={todo.completed}\r\n            completedAt={todo.completedAt}\r\n            notes={todo.notes}\r\n            list={todo.list}\r\n            dueDate={todo.dueDate}\r\n            id={todo.id}\r\n            handleToggle={this.handleToggle}\r\n          />\r\n        </div>\r\n      </Drawer>\r\n    );\r\n  }\r\n}\r\n\r\nTemporaryDrawer.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { toggleTodo }\r\n)(withStyles(styles)(TemporaryDrawer));\r\n","import React, { Fragment } from \"react\";\r\nimport Moment from \"react-moment\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport { toggleTodo, deleteTodo } from \"../../../../actions\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Delete from \"@material-ui/icons/Delete\";\r\nimport ViewTodo from \"../../ViewDrawer\";\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n});\r\n\r\nclass Todo extends React.Component {\r\n  handleToggle = id => {\r\n    this.props.toggleTodo(id);\r\n    window.navigator.vibrate(200);\r\n  };\r\n  handleDelete = id => {\r\n    this.props.deleteTodo(id);\r\n  };\r\n  getTime = completedAt => {\r\n    return Moment(completedAt).calendar();\r\n  };\r\n\r\n  render() {\r\n    const { todo, viewToggler, viewOpen } = this.props;\r\n\r\n    return (\r\n      <Fragment>\r\n        <ListItem role={undefined} dense button>\r\n          <Checkbox\r\n            checked={todo.completed}\r\n            tabIndex={-1}\r\n            disableRipple\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              this.handleToggle(todo.id);\r\n            }}\r\n          />\r\n          <ListItemText\r\n            onClick={() => {\r\n              viewToggler(todo);\r\n            }}\r\n            primary={\r\n              todo.completed ? <strike>{todo.taskName}</strike> : todo.taskName\r\n            }\r\n            secondary={\r\n              todo.completed ? (\r\n                <Moment\r\n                  filter={d => {\r\n                    return \"completed \" + d;\r\n                  }}\r\n                  date={todo.completedAt}\r\n                  fromNow\r\n                />\r\n              ) : (\r\n                \"\"\r\n              )\r\n            }\r\n          />\r\n          <ListItemSecondaryAction>\r\n            <IconButton\r\n              aria-label=\"Delete\"\r\n              onClick={() => {\r\n                this.handleDelete(todo.id);\r\n              }}\r\n            >\r\n              <Delete />\r\n            </IconButton>\r\n          </ListItemSecondaryAction>\r\n        </ListItem>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nTodo.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { toggleTodo, deleteTodo }\r\n)(withStyles(styles)(Todo));\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst styles = {\r\n  card: {\r\n    minWidth: 275\r\n  },\r\n  bullet: {\r\n    display: \"inline-block\",\r\n    margin: \"0 2px\",\r\n    transform: \"scale(0.8)\"\r\n  },\r\n  title: {\r\n    fontSize: 14\r\n  },\r\n  pos: {\r\n    marginBottom: 12\r\n  }\r\n};\r\n\r\nfunction SimpleCard(props) {\r\n  const { classes } = props;\r\n\r\n  return (\r\n    <div style={{ margin: 10 }}>\r\n      <Card className={classes.card}>\r\n        <CardContent>\r\n          <Typography variant=\"h5\" component=\"h2\">\r\n            {props.title}\r\n          </Typography>\r\n\r\n          <Typography component=\"p\">{props.info}</Typography>\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            onClick={() => {\r\n              props.method();\r\n            }}\r\n          >\r\n            {props.methodName}\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nSimpleCard.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(SimpleCard);\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"./ListItem\";\r\nimport EmptyState from \"../../../emptyState\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    overflow: \"auto\",\r\n    webkitOverflowScrolling: \"touch\"\r\n  }\r\n});\r\n\r\nclass TodoLists extends React.Component {\r\n  render() {\r\n    const { classes, todos, createToggler, viewToggler, viewOpen } = this.props;\r\n\r\n    if (todos.length < 1) {\r\n      return (\r\n        <EmptyState\r\n          title=\"Create a todo\"\r\n          info=\"You currently have no todos\"\r\n          methodName=\"Create Todo\"\r\n          method={() => {\r\n            createToggler();\r\n          }}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <List className={classes.root}>\r\n        {todos.map((todo, index) => (\r\n          <Fragment key={index}>\r\n            <ListItem\r\n              todo={todo}\r\n              viewToggler={viewToggler}\r\n              viewOpen={viewOpen}\r\n            />\r\n\r\n            <Divider />\r\n          </Fragment>\r\n        ))}\r\n      </List>\r\n    );\r\n  }\r\n}\r\n\r\nTodoLists.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(TodoLists);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport Create from \"@material-ui/icons/Create\";\r\nimport List from \"./List\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport EmptyState from \"../../emptyState\";\r\n\r\nfunction TabContainer({ dir, todos, createToggler, viewToggler, viewOpen }) {\r\n  return (\r\n    <List\r\n      dir={dir}\r\n      todos={todos}\r\n      createToggler={createToggler}\r\n      viewToggler={viewToggler}\r\n      viewOpen={viewOpen}\r\n    />\r\n  );\r\n}\r\n\r\nTabContainer.propTypes = {\r\n  dir: PropTypes.string.isRequired\r\n};\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  padding: {\r\n    padding: `0 ${theme.spacing.unit * 2}px`\r\n  },\r\n  fab: {\r\n    position: \"absolute\",\r\n    bottom: theme.spacing.unit * 2,\r\n    right: theme.spacing.unit * 2\r\n  },\r\n  fabMoveUp: {\r\n    transform: \"translate3d(0, -46px, 0)\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.enteringScreen,\r\n      easing: theme.transitions.easing.easeOut\r\n    })\r\n  },\r\n  fabMoveDown: {\r\n    transform: \"translate3d(0, 0, 0)\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.leavingScreen,\r\n      easing: theme.transitions.easing.sharp\r\n    })\r\n  }\r\n});\r\n\r\nclass FullWidthTabs extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange = (event, value) => {\r\n    this.props.changeTab(value);\r\n  };\r\n  handleChangeIndex = index => {\r\n    this.props.changeTab(index);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      theme,\r\n      createToggler,\r\n      todos,\r\n      lists,\r\n      dialogToggler,\r\n      selectedTabIndex,\r\n      snackbarOpen,\r\n      viewToggler,\r\n      viewOpen\r\n    } = this.props;\r\n    const fabClassName = classNames(\r\n      classes.fab,\r\n      snackbarOpen ? classes.fabMoveUp : classes.fabMoveDown\r\n    );\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\">\r\n          <Tabs value={selectedTabIndex} onChange={this.handleChange}>\r\n            {lists.map((listName, index) => (\r\n              <Tab\r\n                label={\r\n                  <Badge\r\n                    className={classes.padding}\r\n                    color=\"secondary\"\r\n                    badgeContent={\r\n                      todos.filter(\r\n                        todo =>\r\n                          todo.list === listName && todo.completed !== true\r\n                      ).length\r\n                    }\r\n                  >\r\n                    {listName}\r\n                  </Badge>\r\n                }\r\n                key={index}\r\n                value={index}\r\n              />\r\n            ))}\r\n          </Tabs>\r\n        </AppBar>\r\n        <div>\r\n          <SwipeableViews\r\n            axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\r\n            index={selectedTabIndex}\r\n            onChangeIndex={this.handleChangeIndex}\r\n          >\r\n            {lists.length > 0 ? (\r\n              lists.map((listName, index) => (\r\n                <TabContainer\r\n                  dir={theme.direction}\r\n                  todos={todos.filter(function(todo) {\r\n                    return todo.list === listName;\r\n                  })}\r\n                  key={index}\r\n                  createToggler={createToggler}\r\n                  viewToggler={viewToggler}\r\n                  viewOpen={viewOpen}\r\n                />\r\n              ))\r\n            ) : (\r\n              <EmptyState\r\n                title=\"Create a list to get started\"\r\n                info=\"You currently have no lists create a list to get started\"\r\n                methodName=\"Create list\"\r\n                method={dialogToggler}\r\n              />\r\n            )}\r\n          </SwipeableViews>\r\n        </div>\r\n        <Fab\r\n          className={fabClassName}\r\n          color=\"primary\"\r\n          onClick={() => {\r\n            if (lists.length) {\r\n              createToggler();\r\n            } else {\r\n              dialogToggler();\r\n            }\r\n          }}\r\n        >\r\n          <Create />\r\n        </Fab>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFullWidthTabs.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(FullWidthTabs);\r\n","import React, { Fragment, Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createList } from \"../../actions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nclass CreateList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { value: \"\" };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({ value: event.target.value });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    this.props.createList(this.state.value);\r\n    this.setState({ value: \"\" });\r\n  }\r\n  render() {\r\n    const { dialogToggler, isDialogOpen } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <Dialog\r\n          open={isDialogOpen}\r\n          onClose={dialogToggler}\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\">\r\n            Create a new Todolist\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              After the todolist has been created you can add as many todos as\r\n              you want\r\n            </DialogContentText>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              label=\"List name\"\r\n              type=\"text\"\r\n              fullWidth\r\n              value={this.state.value}\r\n              onChange={this.handleChange}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={dialogToggler} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              onClick={e => {\r\n                this.handleSubmit(e);\r\n                dialogToggler();\r\n              }}\r\n              color=\"primary\"\r\n            >\r\n              Create\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  { createList }\r\n)(CreateList);\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListIcon from \"@material-ui/icons/List\";\r\n\r\nclass ConfirmationDialogRaw extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      value: props.selectedList || props.value\r\n    };\r\n  }\r\n\r\n  // TODO\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.value !== this.props.value) {\r\n      this.setState({ value: nextProps.value });\r\n    }\r\n  }\r\n\r\n  handleEntering = () => {\r\n    this.radioGroupRef.focus();\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.props.onClose(this.props.value);\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.props.onClose(this.state.value);\r\n  };\r\n\r\n  handleChange = (event, value) => {\r\n    this.setState({ value });\r\n  };\r\n\r\n  render() {\r\n    const { value, lists, ...other } = this.props;\r\n\r\n    return (\r\n      <Dialog\r\n        disableBackdropClick\r\n        disableEscapeKeyDown\r\n        maxWidth=\"xs\"\r\n        onEntering={this.handleEntering}\r\n        aria-labelledby=\"confirmation-dialog-title\"\r\n        {...other}\r\n      >\r\n        <DialogTitle id=\"confirmation-dialog-title\">Your Todolists</DialogTitle>\r\n        <DialogContent>\r\n          <RadioGroup\r\n            ref={ref => {\r\n              this.radioGroupRef = ref;\r\n            }}\r\n            aria-label=\"Ringtone\"\r\n            name=\"ringtone\"\r\n            value={this.state.value}\r\n            onChange={this.handleChange}\r\n          >\r\n            {lists.map(list => (\r\n              <FormControlLabel\r\n                value={list}\r\n                key={list}\r\n                control={<Radio color=\"primary\" />}\r\n                label={list}\r\n              />\r\n            ))}\r\n          </RadioGroup>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={this.handleCancel} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={this.handleOk} color=\"primary\">\r\n            Ok\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nConfirmationDialogRaw.propTypes = {\r\n  onClose: PropTypes.func,\r\n  value: PropTypes.string\r\n};\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  paper: {\r\n    width: \"80%\",\r\n    maxHeight: 435\r\n  }\r\n});\r\n\r\nclass ConfirmationDialog extends React.Component {\r\n  state = {\r\n    open: false,\r\n    value: this.props.selectedList || \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { setList, selectedList } = this.props;\r\n    setList(selectedList);\r\n  }\r\n  handleClickListItem = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleClose = value => {\r\n    this.props.setList(value);\r\n    this.setState({ value, open: false });\r\n  };\r\n\r\n  render() {\r\n    let { classes, lists, selectedList } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <ListItem\r\n          button\r\n          divider\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"ringtone-menu\"\r\n          aria-label=\"Phone ringtone\"\r\n          onClick={this.handleClickListItem}\r\n        >\r\n          <ListItemIcon>\r\n            <ListIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"List\" secondary={this.state.value} />\r\n        </ListItem>\r\n\r\n        <ConfirmationDialogRaw\r\n          classes={{\r\n            paper: classes.paper\r\n          }}\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n          value={this.state.value}\r\n          lists={lists}\r\n          selectedList={selectedList}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nConfirmationDialog.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(ConfirmationDialog);\r\n","import React from \"react\";\r\nimport ListPicker from \"./ListPicker\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { connect } from \"react-redux\";\r\nimport { createTodo } from \"../../actions\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport KeyboardBackspace from \"@material-ui/icons/KeyboardBackspace\";\r\nimport Alarm from \"@material-ui/icons/Alarm\";\r\nimport Notes from \"@material-ui/icons/Notes\";\r\nimport Create from \"@material-ui/icons/Create\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nconst styles = theme => ({\r\n  appBar: {\r\n    position: \"relative\"\r\n  },\r\n  flex: {\r\n    flex: 1\r\n  },\r\n  textField: {\r\n    marginLeft: \"1.5%\",\r\n    marginRight: \"1.5%\"\r\n  }\r\n});\r\n\r\nfunction Transition(props) {\r\n  return <Slide direction=\"up\" {...props} />;\r\n}\r\n\r\nclass CreateTodo extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      open: false,\r\n      taskName: \"\",\r\n      date: \"\",\r\n      desc: \"\",\r\n      list: \"\"\r\n    };\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.selectedList !== prevProps.selectedList) {\r\n      this.setState({ selectedList: this.props.selectedList });\r\n    }\r\n  }\r\n\r\n  handleChange = event => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n  setList = listName => {\r\n    this.setState({\r\n      list: listName\r\n    });\r\n  };\r\n  handleSubmit = () => {\r\n    const { taskName, date, desc, list } = this.state;\r\n    this.props.createTodo(taskName, desc, date, list);\r\n    this.setState({\r\n      taskName: \"\",\r\n      date: \"\",\r\n      desc: \"\",\r\n      list: \"\"\r\n    });\r\n  };\r\n  render() {\r\n    const {\r\n      classes,\r\n      dialogToggler,\r\n      lists,\r\n      isDialogOpen,\r\n      selectedList\r\n    } = this.props;\r\n    return (\r\n      <Dialog\r\n        fullScreen\r\n        open={isDialogOpen}\r\n        onClose={dialogToggler}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"Close\"\r\n              onClick={() => {\r\n                dialogToggler();\r\n              }}\r\n            >\r\n              <KeyboardBackspace />\r\n            </IconButton>\r\n            <Typography\r\n              variant=\"h6\"\r\n              color=\"inherit\"\r\n              className={classes.flex}\r\n              onClick={() => {\r\n                dialogToggler();\r\n              }}\r\n            >\r\n              Back\r\n            </Typography>\r\n            <Button\r\n              color=\"inherit\"\r\n              onClick={() => {\r\n                this.handleSubmit();\r\n                dialogToggler();\r\n              }}\r\n            >\r\n              save\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        <List>\r\n          <ListItem>\r\n            <ListItemIcon>\r\n              <Create />\r\n            </ListItemIcon>\r\n            <ListItemText\r\n              primary=\"Task Name\"\r\n              secondary={\r\n                <TextField\r\n                  id=\"standard-with-placeholder\"\r\n                  placeholder=\"Task Name\"\r\n                  value={this.state.taskName}\r\n                  name=\"taskName\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              }\r\n            />\r\n          </ListItem>\r\n          <Divider />\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <Alarm />\r\n            </ListItemIcon>\r\n            <ListItemText\r\n              primary=\"Due Date\"\r\n              secondary={\r\n                <TextField\r\n                  id=\"datetime-local\"\r\n                  type=\"date\"\r\n                  InputLabelProps={{\r\n                    shrink: true\r\n                  }}\r\n                  name=\"date\"\r\n                  value={this.state.date}\r\n                  onChange={this.handleChange}\r\n                />\r\n              }\r\n            />\r\n          </ListItem>\r\n          <Divider />\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <Notes />\r\n            </ListItemIcon>\r\n            <ListItemText\r\n              primary=\"Notes\"\r\n              secondary={\r\n                <Input\r\n                  placeholder=\"write a description\"\r\n                  className={classes.input}\r\n                  inputProps={{\r\n                    \"aria-label\": \"Description\"\r\n                  }}\r\n                  name=\"desc\"\r\n                  value={this.state.desc}\r\n                  onChange={this.handleChange}\r\n                />\r\n              }\r\n            />\r\n            <Divider />\r\n          </ListItem>\r\n          <ListPicker\r\n            lists={lists}\r\n            setList={this.setList}\r\n            selectedList={selectedList}\r\n          />\r\n        </List>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nCreateTodo.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\nfunction mapStateToProps(state) {\r\n  return { lists: state.user.lists };\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createTodo }\r\n)(withStyles(styles)(CreateTodo));\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nconst styles = theme => ({\r\n  close: {\r\n    padding: theme.spacing.unit / 2\r\n  },\r\n  snackbar: {\r\n    position: \"absolute\"\r\n  }\r\n});\r\n\r\nclass SimpleSnackbar extends React.Component {\r\n  handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    this.props.closeSnackbar();\r\n  };\r\n\r\n  render() {\r\n    const { classes, open, message } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"left\"\r\n          }}\r\n          className={classes.snackbar}\r\n          open={open}\r\n          autoHideDuration={4000}\r\n          onClose={this.handleClose}\r\n          onRequestClose={this.handleClose}\r\n          ContentProps={{\r\n            \"aria-describedby\": \"message-id\"\r\n          }}\r\n          message={<span id=\"message-id\">{message}</span>}\r\n          action={[\r\n            <IconButton\r\n              key=\"close\"\r\n              aria-label=\"Close\"\r\n              color=\"inherit\"\r\n              className={classes.close}\r\n              onClick={this.handleClose}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          ]}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nSimpleSnackbar.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(SimpleSnackbar);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Header from \"./Header\";\r\nimport Tabs from \"./Tabs\";\r\nimport CreateList from \"./CreateListDialog\";\r\nimport CreateTodo from \"../CreateTodo\";\r\nimport SideDrawer from \"./SideDrawer\";\r\nimport ViewTodo from \"./ViewDrawer\";\r\nimport Snackbar from \"../snackbar\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { openSnackbar, closeSnackbar } from \"../../actions\";\r\n\r\nconst styles = theme => ({\r\n  progress: {\r\n    margin: theme.spacing.unit * 2\r\n  }\r\n});\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isDrawerOpen: false,\r\n      isDialogOpen: false,\r\n      isCreateTodoOpen: false,\r\n      isViewDrawerOpen: false,\r\n      selectedTodo: {},\r\n      selectedList: \"Todos\",\r\n      selectedTabIndex: 0\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.user.lists.length > 0) {\r\n      this.setState({ selectedList: this.props.user.lists[0] });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    // Typical usage (don't forget to compare props):\r\n    if (\r\n      this.props.user.lists !== prevProps.user.lists &&\r\n      prevProps.user.lists.length === 0\r\n    ) {\r\n      this.setState({ selectedList: this.props.user.lists[0] });\r\n    }\r\n    if (\r\n      this.props.user.lists !== prevProps.user.lists &&\r\n      this.props.user.lists.length === 0\r\n    ) {\r\n      this.setState({ selectedList: \"Todos\" });\r\n    }\r\n  }\r\n  changeTab = value => {\r\n    let lists = this.props.user.lists;\r\n    this.setState({ selectedList: lists[value] });\r\n    this.setState({ selectedTabIndex: value });\r\n  };\r\n  drawerToggler = () => {\r\n    this.setState(prevState => {\r\n      return { isDrawerOpen: !prevState.isDrawerOpen };\r\n    });\r\n  };\r\n  viewDrawerToggler = (todo = {}) => {\r\n    this.setState(prevState => {\r\n      return {\r\n        isViewDrawerOpen: !prevState.isViewDrawerOpen,\r\n        selectedTodo: todo\r\n      };\r\n    });\r\n  };\r\n  dialogToggler = () => {\r\n    this.setState(prevState => {\r\n      return { isDialogOpen: !prevState.isDialogOpen };\r\n    });\r\n  };\r\n  createTodoToggler = () => {\r\n    this.setState(prevState => {\r\n      return { isCreateTodoOpen: !prevState.isCreateTodoOpen };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      isDrawerOpen,\r\n      isDialogOpen,\r\n      selectedList,\r\n      selectedTabIndex,\r\n      isCreateTodoOpen,\r\n      isViewDrawerOpen,\r\n      selectedTodo\r\n    } = this.state;\r\n    let { user, classes, closeSnackbar, toast } = this.props;\r\n    let { lists, todos } = user;\r\n\r\n    if (!user) {\r\n      return (\r\n        <Fragment>\r\n          <Header drawerToggler={this.drawerToggler} />\r\n          <CircularProgress className={classes.progress} />\r\n        </Fragment>\r\n      );\r\n    }\r\n    return (\r\n      <Fragment>\r\n        <Header\r\n          selectedList={selectedList}\r\n          drawerToggler={this.drawerToggler}\r\n        />\r\n        <SideDrawer\r\n          isDrawerOpen={isDrawerOpen}\r\n          drawerToggler={this.drawerToggler}\r\n          lists={lists}\r\n          dialogToggler={this.dialogToggler}\r\n          changeTab={this.changeTab}\r\n        />\r\n\r\n        <Tabs\r\n          dialogToggler={this.dialogToggler}\r\n          createToggler={this.createTodoToggler}\r\n          viewToggler={this.viewDrawerToggler}\r\n          lists={lists}\r\n          todos={todos}\r\n          selectedTabIndex={selectedTabIndex}\r\n          changeTab={this.changeTab}\r\n          snackbarOpen={toast.open}\r\n          selectedList={selectedList}\r\n          viewOpen={isViewDrawerOpen}\r\n        />\r\n        <CreateList\r\n          dialogToggler={this.dialogToggler}\r\n          isDialogOpen={isDialogOpen}\r\n        />\r\n        <CreateTodo\r\n          dialogToggler={this.createTodoToggler}\r\n          isDialogOpen={isCreateTodoOpen}\r\n          selectedList={selectedList}\r\n        />\r\n        <ViewTodo\r\n          todo={selectedTodo}\r\n          open={isViewDrawerOpen}\r\n          viewToggler={this.viewDrawerToggler}\r\n        />\r\n        <Snackbar\r\n          closeSnackbar={closeSnackbar}\r\n          message={toast.message}\r\n          open={toast.open}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ snackbar }) {\r\n  return { toast: snackbar.toast };\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  { openSnackbar, closeSnackbar }\r\n)(withStyles(styles)(Home));\r\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { askForPermission } from \"./Notifications\";\nimport { fetchUser, openSnackbar } from \"./actions\";\nimport Home from \"./components/Home\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.fetchUser();\n\n    const isIos = () => {\n      const userAgent = window.navigator.userAgent.toLowerCase();\n      return /iphone|ipad|ipod/.test(userAgent);\n    };\n    // Detects if device is in standalone mode\n    const isInStandaloneMode = () =>\n      \"standalone\" in window.navigator && window.navigator.standalone;\n    if (isIos() && !isInStandaloneMode()) {\n      this.props.openSnackbar(\n        \"Install this app on your device.Tap the share icon and then Add to homescreen \"\n      );\n    }\n\n    window.addEventListener(\"offline\", function(e) {\n      this.props.openSnackbar(\"Not connected to the internet\");\n    });\n\n    askForPermission();\n  }\n\n  render() {\n    return <Home user={this.props.user} />;\n  }\n}\n\nfunction mapStateToProps({ user }) {\n  return { user };\n}\n\nexport default connect(\n  mapStateToProps,\n  { fetchUser, openSnackbar }\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n    const cacheName = \"shell-content\";\n    const filesToCache = [\"/assets/js/inobounce.min.js\", \"/\"];\n    window.addEventListener(\"install\", function(e) {\n      console.log(\"[ServiceWorker] Install\");\n      e.waitUntil(\n        caches.open(cacheName).then(function(cache) {\n          console.log(\"[ServiceWorker] Caching app shell\");\n          return cache.addAll(filesToCache);\n        })\n      );\n    });\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/lib/integration/react\";\nimport { persistor, store } from \"./store\";\nimport LoadingView from \"./components/loadingView\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#212121\"\n    },\n    secondary: {\n      main: \"#ffffff\"\n    }\n  }\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={<LoadingView />} persistor={persistor}>\n      <MuiThemeProvider theme={theme}>\n        <App />\n      </MuiThemeProvider>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}